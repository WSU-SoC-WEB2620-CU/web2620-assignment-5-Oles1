// import other files into this main.scss file with the @import directive
@import "globals/mixins"; //importing mixins file from the globals folder
@import "globals/nav"; //importing the nav.scss stylesheet
@import "globals/variables"; //importing variables
body {
  @include body_properties; /* using body properties mixin */
}

body,
input,
textarea,
select {
  @include generic_font_style; //applying generic font style to all these selectors
}

//Loop through h1 --> h6 by interpolating h#{}
@for $hNum from 1 through 6 {
  h#{$hNum} {
    @include generic_heading_style;
    a {
      color: inherit;
      text-decoration: none;
    }
  }
}

strong,
b {
  font-weight: bold;
  color: $color-strong;
}

em,
i {
  font-style: italic;
}

a {
  color: $generic_a_color;
}

sub {
  position: relative;
  font-size: 0.8em;
  top: 0.5em;
}

sup {
  @extend sub;
  top: -0.5em;
}

hr {
  border: 0;
  border-top: solid 1px $hr-border-color;
}

p,
ul,
ol,
dl,
table {
  margin-bottom: 1em;
}

header {
  margin-bottom: 2em;
  line-height: 1.7em;
  h2 {
    font-size: 2.5em; //nesting h2 within header
  }
  .byline {
    @include byline;
  }
}

section,
article {
  margin-bottom: 3em;
  > :last-child {
    margin-bottom: 0;
  }
}

blockquote {
  @include blockquote_generic_style;
}

footer {
  margin-top: 1em;
}

.container {
  @include generic_container_style;
  &.small {
    width: 900px;
  }
  &.big {
    width: 100%;
    max-width: $container-max-width;
    min-width: $container-min-width;
  }
}
.row {
  margin-left: -50px;
  section,
  article {
    margin-bottom: 0;
  }
  [class*="column-"] {
    padding: $column-padding;
    float: left;
    box-sizing: border-box;
  }
  &:after {
    content: "";
    display: block;
    clear: both;
    height: 0;
  }
}

//Need to interpolate with column-#{}. Need to loop through 1 - 12
// .column-1,
// through .column-12 {
//   width: 100%;
//   // @include make-column(100%);
// }
@for $columnNum from 1 through 12 {
  .column-#{$columnNum} {
    width: 100%;
  }
}

/* column styling */
@media all and (min-width: 576px) {
  //Interpolate column and width for the media query

  /* iterates through the column list and interpolates */
  @each $col in $column-list {
    .column-#{$col} {
      width: calc(100% / 12) * $col; //dynamically calculates width ;
    }
  }
}

/* Image styling */

.image {
  display: inline-block;
  img {
    @include generic_img_style;
  }

  &.featured {
    @include generic_img_style;
    margin: 0 0 2em 0;
  }
  &.full {
    @include generic_img_style;
    margin-bottom: 2em;
  }

  &.left {
    float: left;
    margin: 0 2em 2em 0;
  }

  &.centered {
    display: block;
    margin: 0 0 2em 0;
    img {
      margin: 0 auto;
      width: auto;
    }
  }
}

//This is nesting all ul rules
ul {
  &.default {
    @include default_ul_style;
    a {
      text-decoration: none;
      color: rgba($generic_color, 0.5);
    }

    li {
      display: block;
      padding: 2em 0em 1.25em 0em;
      border-top: 1px solid $link-color;
    }
    li:first-child {
      @include li-first-child;
    }
  }
  &.default a:hover {
    text-decoration: underline;
  }
  &.style1 {
    @include default_ul_style;
    li {
      padding: 0.6em 0em;
      border-top: 1px solid;
      border-color: rgba(0, 0, 0, 0.1);
    }
    li:first-child {
      @include li-first-child;
    }
  }
  &.style2 {
    @include default_ul_style;
    li {
      padding: 1.9em 0em 1.6em 0em;
      border-top: 1px solid;
      border-color: rgba($generic-border-color, 0.1);
    }
    li:first-child {
      @include li-first-child;
    }
    img {
      float: left;
      padding-right: 1em;
    }
  }
  &.style5 {
    overflow: hidden;
    margin: 0em 0em 1em 0em;
    padding: 0em;
    list-style: none;
    li {
      float: left;
      padding: 0.25em 0.25em;
      line-height: 0;
    }
  }
}

//nesting button rules
.button {
  @include generic_button_style;
  &:hover {
    background: $generic_a_color;
    color: $white-background-color !important;
  }
}

/* header style */
.header {
  position: relative;
  background: $white-background-color;
  .container {
    position: relative;
    padding: 4em 0em;
  }
}

/* Logo style */
.logo {
  position: absolute;
  left: 0em;
  top: 3em;
  a {
    display: block;
    text-decoration: none;
    font-size: 2.8em;
    font-weight: 600;
  }
}

.banner {
  position: relative;
  padding: 12em 0em;
  background: url("/images/banner.jpg") no-repeat center;
  background-size: cover;
  color: $white-background-color;
}

.page {
  position: relative;
  background: $white-background-color;
}

.main {
  border-top: 1px solid;
  border-color: rgba($generic-border-color, 0.2);
}

.sidebar header h2 {
  font-size: 1.6em;
}

.footer {
  position: relative;
  color: rgba($generic_color, 0.4);
  h2 {
    padding-bottom: 1.5em;
    font-size: 1.6em;
    color: #fff;
  }
  strong {
    color: rgba($generic_color, 0.7);
  }
}

.copyright {
  @include generic_copyright;
  a {
    text-decoration: none;
    color: rgba($generic_color, 0.4) !important;
  }
}

.marketing {
  position: relative;
  header h2 {
    font-size: 1.6em;
  }
}

/* featured style */
.featured {
  position: relative;
  .divider {
    border-bottom: 1px solid $link-color;
  }
  .box {
    @include generic_box_style;
  }
}

/* ballon style */
.balloon {
  @include generic_ballon_style;
  &-bgbtm {
    height: 1.87em;
  }
  strong {
    color: $ballon-strong-color !important;
  }
}
